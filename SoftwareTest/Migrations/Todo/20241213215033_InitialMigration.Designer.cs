// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoftwareTest.ModelsTodo;

#nullable disable

namespace SoftwareTest.Migrations.Todo
{
    [DbContext(typeof(TodoContext))]
    [Migration("20241213215033_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SoftwareTest.ModelsTodo.Cpr", b =>
                {
                    b.Property<string>("CprNr")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CprNr");

                    b.ToTable("Cpr", (string)null);
                });

            modelBuilder.Entity("SoftwareTest.ModelsTodo.Todolist", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("UserId");

                    b.ToTable("Todolist", (string)null);
                });

            modelBuilder.Entity("SoftwareTest.ModelsTodo.Todolist", b =>
                {
                    b.HasOne("SoftwareTest.ModelsTodo.Cpr", "User")
                        .WithMany("Todolists")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Todolist_Cpr");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SoftwareTest.ModelsTodo.Cpr", b =>
                {
                    b.Navigation("Todolists");
                });
#pragma warning restore 612, 618
        }
    }
}
