@page "/cprverify"
@using Microsoft.EntityFrameworkCore
@using SoftwareTest.ModelsTodo
@inject SoftwareTest.Services.IHashingHandler HashingHandler
@inject TodoContext TodoDb
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation

<h3>Verify Your CPR Number</h3>
@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p style="color:red">@ErrorMessage</p>
}
<input @bind="EnteredCpr" placeholder="Enter CPR Number" />
<button @onclick="VerifyCprAsync">Verify</button>

@code {
    private string EnteredCpr = string.Empty;
    private string ErrorMessage = string.Empty;
    private string? ReturnUrl; // Store the optional returnUrl

    protected override void OnInitialized()
    {
        // Extract returnUrl from query string if present
        var uri = new Uri(Navigation.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        ReturnUrl = query["returnUrl"];
        Console.WriteLine($"ReturnUrl extracted: {ReturnUrl}");
    }

    private async Task VerifyCprAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        var userId = user.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;

        if (string.IsNullOrEmpty(userId))
        {
            ErrorMessage = "You are not authenticated. Please log in.";
            return;
        }

        var cprEntry = await TodoDb.Cprs.FirstOrDefaultAsync(c => c.User == userId);
        if (cprEntry == null)
        {
            ErrorMessage = "CPR number not found.";
            return;
        }

        var hashedInput = HashingHandler.SHAHashing(EnteredCpr);
        Console.WriteLine($"Entered CPR: {EnteredCpr}, Hashed Input: {hashedInput}, Stored CPR: {cprEntry.CprNr}");

        if (cprEntry.CprNr == hashedInput)
        {
            // Redirect to the return URL if provided; otherwise, go to the homepage
            if (!string.IsNullOrEmpty(ReturnUrl))
            {
                Navigation.NavigateTo(ReturnUrl);
            }
            else
            {
                Navigation.NavigateTo("/");
            }
        }
        else
        {
            ErrorMessage = "Incorrect CPR number.";
        }
    }
}
